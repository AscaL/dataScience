install.packages("reshape2", dependencies = T)
install.packages("Matrix", dependencies = T)
install.packages("xgboost", dependencies = T)
install.packages("Metrics", dependencies = T)
install.packages("randomForest", dependencies = T)
install.packages("dplyr", dependencies = T)
install.packages("caret", dependencies = T)
install.packages("scales", dependencies = T)
install.packages("e1071", dependencies = T)
install.packages("corrplot", dependencies = T)
install.packages("glmnet", dependencies = T)
install.packages("rpart", dependencies = T)
install.packages("repr", dependencies = T)
install.packages("Amelia", dependencies = T)
install.packages(c("Rttf2pt1", "yaml"))
install.packages("naivebayes")
install.packages("tm")
sms <- read.csv("~/dataScience/sms_spam.csv")
sms <- read.csv("~/dataScience/sms_spam.csv")
str(sms)
head(csv)
head(sms)
summary(sms)
acc = 4827/nrow(sms)
(acc = 4827/nrow(sms))
library(tm)
install.packages("tm")
install.packages("tm")
install.packages("tm", dependencies = T)
vs <- VectorSource(sms$text)
vs <- VectorSource(sms$text)
library(tm)
sms <- read.csv("~/dataScience/sms_spam.csv")
str(sms)
head(sms)
summary(sms)
(acc = 4827/nrow(sms))
vs <- VectorSource(sms$text)
corp <- Corpus(vs)
inspect(corp[1:5])
dtm <- DocumentTermMatrix(corp)
(dtm <- DocumentTermMatrix(corp))
dtm <- removeSparseTerms(dtm, 0.999)
dtm <- removeSparseTerms(dtm, 0.999)
(dtm <- removeSparseTerms(dtm, 0.999))
inspect(dtm)
as.matrix(dtm)
head(as.matrix(dtm))
as.data.frame(as.matrix(dtm))
head(data)
data <- as.data.frame(as.matrix(dtm))
head(data)
data$label <- sms$type
vs <- VectorSource(sms$text)
corp <- Corpus(vs)
inspect(corp[1:5])
(dtm <- DocumentTermMatrix(corp))
(dtm <- removeSparseTerms(dtm, 0.99999))
inspect(dtm)
data <- as.data.frame(as.matrix(dtm))
head(data)
data$label <- sms$type
vs <- VectorSource(sms$text)
corp <- Corpus(vs)
inspect(corp[1:5])
(dtm <- DocumentTermMatrix(corp))
(dtm <- removeSparseTerms(dtm, 0.99999))
inspect(dtm)
data <- as.data.frame(as.matrix(dtm))
head(data)
data$label <- sms$type
vs <- VectorSource(sms$text)
corp <- Corpus(vs)
inspect(corp[1:5])
(dtm <- DocumentTermMatrix(corp))
(dtm <- removeSparseTerms(dtm, 0.95))
inspect(dtm)
data <- as.data.frame(as.matrix(dtm))
head(data)
data$label <- sms$type
vs <- VectorSource(sms$text)
corp <- Corpus(vs)
inspect(corp[1:5])
(dtm <- DocumentTermMatrix(corp))
(dtm <- removeSparseTerms(dtm, 0.95))
inspect(dtm)
data <- as.data.frame(as.matrix(dtm))
head(data)
data$label <- sms$type
library(reshape2)
library(ggplot2)
library(reshape2)
library(ggplot2)
data %>%
melt()
library(reshape2)
library(ggplot2)
data %>%
melt()
vs <- VectorSource(sms$text)
corp <- Corpus(vs)
inspect(corp[1:5])
(dtm <- DocumentTermMatrix(corp))
(dtm <- removeSparseTerms(dtm, 0.95))
inspect(dtm)
data <- as.data.frame(as.matrix(dtm))
head(data)
data$label <- sms$type
data %>%
melt()
library(tidyverse)
library(reshape2)
library(tidyverse)
library(ggplot2)
data %>%
melt()
data %>%
melt() %>%
ggplot() +
geom_col(aes(x = variable, y = value))
data %>%
melt() %>%
ggplot() +
geom_col(aes(x = variable, y = value, fill = label), position = position_dodge())
library(reshape2)
library(tidyverse)
library(ggplot2)
data %>%
melt()
data %>%
melt(ids = label) %>%
ggplot() +
geom_col(aes(x = variable, y = value, fill = label), position = position_dodge())
data %>%
melt(ids = label) %>%
ggplot() +
geom_col(aes(x = variable, y = value, fill = label), position = position_dodge()) +
theme(axis.text.x = element_text(angle=90))
library(naivebayes)
nb <- naive_bayes(x = select(data, -label), y = data$label)
(nb <- naive_bayes(x = select(data, -label), y = data$label))
nb$tables
data$pred <- predict(nb, newdata = data)
data$pred
summary(data$pred)
count(data, label, pred)
table(data$label, data$pred)
(acc = (3865 + 551)/nrow(data))
table(data$label, data$pred)
(sens = 551/(551+196))
vs <- VectorSource(sms$text)
corp <- Corpus(vs)
inspect(corp[1:5])
(dtm <- DocumentTermMatrix(corp))
(dtm <- removeSparseTerms(dtm, 0.99))
inspect(dtm)
data <- as.data.frame(as.matrix(dtm))
head(data)
data$label <- sms$type
library(reshape2)
library(tidyverse)
library(ggplot2)
data %>%
melt()
data %>%
melt(ids = label) %>%
ggplot() +
geom_col(aes(x = variable, y = value, fill = label), position = position_dodge()) +
theme(axis.text.x = element_text(angle=90))
(nb <- naive_bayes(x = select(data, -label), y = data$label))
nb$tables
data$pred <- predict(nb, newdata = data)
summary(data$pred)
count(data, label, pred)
table(data$label, data$pred)
vs <- VectorSource(sms$text)
corp <- Corpus(vs)
inspect(corp[1:5])
(dtm <- DocumentTermMatrix(corp))
(dtm <- removeSparseTerms(dtm, 0.97))
inspect(dtm)
data <- as.data.frame(as.matrix(dtm))
head(data)
data$label <- sms$type
library(reshape2)
library(tidyverse)
library(ggplot2)
data %>%
melt()
data %>%
melt(ids = label) %>%
ggplot() +
geom_col(aes(x = variable, y = value, fill = label), position = position_dodge()) +
theme(axis.text.x = element_text(angle=90))
library(naivebayes)
(nb <- naive_bayes(x = select(data, -label), y = data$label))
nb$tables
data$pred <- predict(nb, newdata = data)
summary(data$pred)
count(data, label, pred)
table(data$label, data$pred)
# lost some accuracy but sensitivity increased a lot
(acc = (3865 + 551)/nrow(data))
(sens = 551/(551+196))
table(data$label, data$pred)
x <- table(data$label, data$pred)
library(caret)
confusionMatrix(data$label, data$pred)
vs <- VectorSource(sms$text)
corp <- Corpus(vs)
inspect(corp[1:5])
(dtm <- DocumentTermMatrix(corp))
(dtm <- removeSparseTerms(dtm, 0.95))
inspect(dtm)
data <- as.data.frame(as.matrix(dtm))
head(data)
data$label <- sms$type
library(naivebayes)
library(caret)
(nb <- naive_bayes(x = select(data, -label), y = data$label))
nb$tables
data$pred <- predict(nb, newdata = data)
summary(data$pred)
count(data, label, pred)
confusionMatrix(data$label, data$pred)
# lost some accuracy but sensitivity increased a lot
(acc = (3865 + 551)/nrow(data))
(sens = 551/(551+196))
confusionMatrix(data$label, data$pred)
# lost some accuracy but sensitivity increased a lot
(acc = (3865 + 551)/nrow(data))
(sens = 551/(551+196))
confusionMatrix(data$label, data$pred)
# lost some accuracy but sensitivity increased a lot
(acc = (3865 + 551)/nrow(data))
(sens = 551/(551+196))
confusionMatrix(data$label, data$pred)
table(data$label, data$pred)
confusionMatrix(data$label, data$pred)
(sens = 551/(551+196))
vs <- VectorSource(sms$text)
corp <- Corpus(vs)
inspect(corp[1:5])
(dtm <- DocumentTermMatrix(corp))
(dtm <- removeSparseTerms(dtm, 0.95))
inspect(dtm)
data <- as.data.frame(as.matrix(dtm))
mutate_all(data, sign)
head(data)
data$label <- sms$type
library(reshape2)
library(tidyverse)
library(ggplot2)
data %>%
melt()
data %>%
melt(ids = label) %>%
ggplot() +
geom_col(aes(x = variable, y = value, fill = label), position = position_dodge()) +
theme(axis.text.x = element_text(angle=90))
library(naivebayes)
library(caret)
(nb <- naive_bayes(x = select(data, -label), y = data$label))
nb$tables
data$pred <- predict(nb, newdata = data)
summary(data$pred)
count(data, label, pred)
table(data$label, data$pred)
confusionMatrix(data$label, data$pred)
# binary categorical variables
confusionMatrix(data$label, data$pred)
vs <- VectorSource(sms$text)
corp <- Corpus(vs)
inspect(corp[1:5])
(dtm <- DocumentTermMatrix(corp))
(dtm <- removeSparseTerms(dtm, 0.95))
inspect(dtm)
data <- as.data.frame(as.matrix(dtm))
data %>%
mutate_all(data) %>%
mutate_all(as.factor)
vs <- VectorSource(sms$text)
corp <- Corpus(vs)
inspect(corp[1:5])
(dtm <- DocumentTermMatrix(corp))
(dtm <- removeSparseTerms(dtm, 0.95))
inspect(dtm)
data <- as.data.frame(as.matrix(dtm))
data %>%
mutate_all(data) %>%
mutate_all(as.factor)
vs <- VectorSource(sms$text)
corp <- Corpus(vs)
inspect(corp[1:5])
(dtm <- DocumentTermMatrix(corp))
(dtm <- removeSparseTerms(dtm, 0.95))
inspect(dtm)
data <- as.data.frame(as.matrix(dtm))
data %>%
mutate_all(sign) %>%
mutate_all(as.factor)
data$label <- as.factor(sms$type)
head(data)
library(reshape2)
library(tidyverse)
library(ggplot2)
data %>%
melt()
data %>%
melt(ids = label) %>%
ggplot() +
geom_col(aes(x = variable, y = value, fill = label), position = position_dodge()) +
theme(axis.text.x = element_text(angle=90))
library(naivebayes)
library(caret)
(nb <- naive_bayes(x = select(data, -label), y = data$label))
nb$tables
data$pred <- predict(nb, newdata = data)
summary(data$pred)
count(data, label, pred)
table(data$label, data$pred)
confusionMatrix(data$label, data$pred)
# binary categorical variables
vs <- VectorSource(sms$text)
corp <- Corpus(vs)
inspect(corp[1:5])
(dtm <- DocumentTermMatrix(corp))
(dtm <- removeSparseTerms(dtm, 0.99))
inspect(dtm)
data <- as.data.frame(as.matrix(dtm))
data %>%
mutate_all(sign) %>%
mutate_all(as.factor)
data$label <- as.factor(sms$type)
head(data)
library(naivebayes)
library(caret)
(nb <- naive_bayes(x = select(data, -label), y = data$label))
nb$tables
data$pred <- predict(nb, newdata = data)
summary(data$pred)
count(data, label, pred)
table(data$label, data$pred)
confusionMatrix(data$label, data$pred)
# binary categorical variables
library(caTools)
library(caTools)
idx <- sample.split(data$label, SplitRatio = 0.9)
train <- data[idx,]
test <- data[!idx,]
nb <- naive_bayes(select(train, -label), train$label))
library(caTools)
idx <- sample.split(data$label, SplitRatio = 0.9)
train <- data[idx,]
test <- data[!idx,]
nb <- naive_bayes(select(train, -label), train$label)
nb$tables
confusionMatrix(test$label, test$pred)
# training
library(caTools)
idx <- sample.split(data$label, SplitRatio = 0.8)
train <- data[idx,]
test <- data[!idx,]
nb <- naive_bayes(select(train, -label), train$label)
nb$tables
# pred
test$pred <- predict(nb, newdata = test)
confusionMatrix(test$label, test$pred)
confusionMatrix(test$label, test$pred)
idx <- sample.split(data$label, SplitRatio = 0.9)
vs <- VectorSource(sms$text)
corp <- Corpus(vs)
inspect(corp[1:5])
dtm <- DocumentTermMatrix(corp)
dtm <- removeSparseTerms(dtm, 0.99)
inspect(dtm)
# num to categorical
data <- as.data.frame(as.matrix(dtm))
data %>%
mutate_all(sign) %>%
mutate_all(as.factor)
data$label <- as.factor(sms$type)
head(data)
library(reshape2)
library(tidyverse)
library(ggplot2)
data %>%
melt()
data %>%
melt(ids = label) %>%
ggplot() +
geom_col(aes(x = variable, y = value, fill = label), position = position_dodge()) +
theme(axis.text.x = element_text(angle=90))
library(naivebayes)
library(caret)
(nb <- naive_bayes(x = select(data, -label), y = data$label))
nb$tables
data$pred <- predict(nb, newdata = data)
summary(data$pred)
count(data, label, pred)
table(data$label, data$pred)
confusionMatrix(data$label, data$pred)
# training
library(caTools)
idx <- sample.split(data$label, SplitRatio = 0.9)
train <- data[idx,]
test <- data[!idx,]
nb <- naive_bayes(select(train, -label), train$label)
nb$tables
# pred
test$pred <- predict(nb, newdata = test)
confusionMatrix(test$label, test$pred)
confusionMatrix(test$label, test$pred)
# training
library(caTools)
idx <- sample.split(data$label, SplitRatio = 0.9)
train <- data[idx,]
test <- data[!idx,]
nb <- naive_bayes(select(train, -label), train$label)
#nb$tables
# pred
test$pred <- predict(nb, newdata = test)
confusionMatrix(test$label, test$pred)
vs <- VectorSource(sms$text)
corp <- Corpus(vs)
inspect(corp[1:5])
dtm <- DocumentTermMatrix(corp)
dtm <- removeSparseTerms(dtm, 0.8)
inspect(dtm)
# num to categorical
data <- as.data.frame(as.matrix(dtm))
data %>%
mutate_all(sign) %>%
mutate_all(as.factor)
data$label <- as.factor(sms$type)
head(data)
library(naivebayes)
library(caret)
(nb <- naive_bayes(x = select(data, -label), y = data$label))
nb$tables
data$pred <- predict(nb, newdata = data)
summary(data$pred)
count(data, label, pred)
table(data$label, data$pred)
confusionMatrix(data$label, data$pred)
# training
library(caTools)
idx <- sample.split(data$label, SplitRatio = 0.95)
train <- data[idx,]
test <- data[!idx,]
nb <- naive_bayes(select(train, -label), train$label)
#nb$tables
# pred
test$pred <- predict(nb, newdata = test)
confusionMatrix(test$label, test$pred)
# training
library(caTools)
idx <- sample.split(data$label, SplitRatio = 0.05)
train <- data[idx,]
test <- data[!idx,]
nb <- naive_bayes(select(train, -label), train$label)
#nb$tables
# pred
test$pred <- predict(nb, newdata = test)
confusionMatrix(test$label, test$pred)
# training
library(caTools)
idx <- sample.split(data$label, SplitRatio = 0.05)
train <- data[idx,]
test <- data[!idx,]
nb <- naive_bayes(select(train, -label), train$label, laplace = 1)
#nb$tables
# pred
test$pred <- predict(nb, newdata = test)
confusionMatrix(test$label, test$pred)
# training
library(caTools)
idx <- sample.split(data$label, SplitRatio = 0.5)
train <- data[idx,]
test <- data[!idx,]
nb <- naive_bayes(select(train, -label), train$label, laplace = 1)
#nb$tables
# pred
test$pred <- predict(nb, newdata = test)
confusionMatrix(test$label, test$pred)
# training
library(caTools)
idx <- sample.split(data$label, SplitRatio = 0.9)
train <- data[idx,]
test <- data[!idx,]
nb <- naive_bayes(select(train, -label), train$label, laplace = 1)
#nb$tables
# pred
test$pred <- predict(nb, newdata = test)
confusionMatrix(test$label, test$pred)
# training
library(caTools)
idx <- sample.split(data$label, SplitRatio = 0.5)
train <- data[idx,]
test <- data[!idx,]
nb <- naive_bayes(select(train, -label), train$label, laplace = 1)
#nb$tables
# pred
test$pred <- predict(nb, newdata = test)
confusionMatrix(test$label, test$pred)
train[!complete.cases(train[,names(train) %in% MissBsmt]),names(train) %in% names(train)[which(grepl("Bsmt",names(train)))]]
library(tidyverse)
library(ggthemes)
library(rpart)
library(reshape2)
library(Amelia)
install.packages("Amelia", dependencies = T)
